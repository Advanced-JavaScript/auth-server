'use strict';

const express = require('express');
const basicAuth = require('./middleware/basic');
const Users = require('./models/users-model');

const router = express.Router();

router.post('/signup', signup);
router.post('/signin', basicAuth, signin);
router.get('/Users', getUsers);

/**
 * @route POST /signup creates an individual user object and adds it to the Users database
 * @param {user_request} user.body.required - the new user
 * @returns {token} 200 - a token generated by a generateToken method
 * @returns {Error} 500 - unexpected error
 */

function signup(req, res, next) {
  Users
    .create(req.body)
    .then(async (user) => {
      const token = await Users.generateToken(user);
      res.status(200).json({ token });
    })
    .catch((err) => { console.log('Something went wrong!');
      res.status(403).send(err.message);
    });
}

/**
 * @route POST /signin to the server and returns a token
 * @returns {token} 200 - a token generated by a generateToken method
 * @returns {Error} 500 - unexpected error
 */

function signin(req, res, next) {
  try{
    res.json({ token: req.token , username :req.user});
  } catch(e){ res.status(403).json('Invalid credentials');}
}

/**
 * @route GET /Users
 * @returns {Users.model} 200 - An object containing all Users
 * @returns {Error} 403 - invalid login
 * @returns {Error} 500 - unexpected error
 */

async function getUsers(req, res, next) {
  let all = await Users.list();
  res.status(200).json(all);
}

module.exports = router;